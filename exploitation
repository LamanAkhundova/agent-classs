import numpy as np

class Agent:
    def __init__(self, action_size, epsilon=1.0, epsilon_min=0.01, epsilon_decay=0.995):
        self.action_size = action_size
        self.epsilon = epsilon
        self.epsilon_min = epsilon_min
        self.epsilon_decay = epsilon_decay

    def act(self, state, model):
        if np.random.rand() <= self.epsilon:
            return np.random.choice(self.action_size)  # Exploration
        act_values = model.predict(state)
        return np.argmax(act_values[0])  # Exploitation

    def update_epsilon(self):
        if self.epsilon > self.epsilon_min:
            self.epsilon *= self.epsilon_decay

# Example usage
agent = Agent(action_size=4)  # Assume there are 4 possible actions
state = np.array([1, 0, 0, 0])  # Example state
action = agent.act(state, model)  # Choose action based on epsilon-greedy strategy
